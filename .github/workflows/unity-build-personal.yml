# 名前を付ける。これがGithubActions上に表示される
name: Run the Windows build

# タグ作成後に実行されるようにする
on:
  push:
    tags:
      - "*"

jobs:
  build:
    name: Run the Windows build
    runs-on: ubuntu-latest
    steps:
      # リポジトリのチェックアウト
      - name: Check out my unity project.
        uses: actions/checkout@v4

      - name: Create LFS file list
        run: git lfs ls-files -l | cut -d' ' -f1 | sort > .lfs-assets-id

      # LFSファイルのキャッシュを取得する
      - name: Restore LFS cache
        uses: actions/cache@v3
        id: lfs-cache
        with:
          path: .git/lfs
          key: ${{ runner.os }}-lfs-${{ hashFiles('.lfs-assets-id') }}

      # LFSファイルをPullする
      - name: Git LFS Pull
        run: |
          git lfs pull
          git add .
          git reset --hard

      # タグ名を取得して$GITHUB_OUTPUTに保存しておく
      - name: Set outputs
        id: vars
        run: echo "tag_name=${{ github.ref_name }}" >> $GITHUB_OUTPUT

      # Cache
      - uses: actions/cache@v3
        with:
          path: Library
          key: Library-${{ hashFiles('Assets/**', 'Packages/**', 'ProjectSettings/**') }}
          restore-keys: |
            Library-

      # Unityプロジェクトのビルド
      # 設定しない場合、buildフォルダに出力される
      - name: Run the Windows build
        uses: game-ci/unity-builder@v4
        env:
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
        with:
          targetPlatform: StandaloneWindows64
          unityVersion: 2022.3.42f1  # ここに使うUnityのバージョンを入れる
          projectPath: QuizGame  # ここでUnityプロジェクトがあるパスを指定

      # 成果物をZIPにしてアップロードする
      - name: Zip the Windows Build
        run: zip -r Build-${{ steps.vars.outputs.tag_name }}.zip build

      # リリースを作成
      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # GitHubトークンを使用して認証
        with:
          tag_name: ${{ steps.vars.outputs.tag_name }}  # タグ名をリリース名に使う
          release_name: "Release ${{ steps.vars.outputs.tag_name }}"
          draft: false
          prerelease: false

      # 成果物をリリースにアップロード
      - name: Upload Build to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: Build-${{ steps.vars.outputs.tag_name }}.zip
          asset_name: Build-${{ steps.vars.outputs.tag_name }}.zip
          asset_content_type: application/zip
